# FROM nginx/unit:1.26.1-python3.10
FROM python:3.9-alpine

# RUN apt update && apt install -y python3-pip curl && \
#     rm -rf /var/lib/apt/lists/*

RUN apk add --update --no-cache --virtual .tmp-build-deps libffi-dev gcc libc-dev linux-headers

COPY ./requirements.txt /config/
RUN pip3 install --no-cache-dir -r /config/requirements.txt

RUN mkdir -p /www/

COPY ./api/ /www/api
COPY ./framework/ /www/framework
COPY ./main_api.py /www/
#COPY ./framework /www/framework/
# COPY ./api/config.json /docker-entrypoint.d/

ENV HOST="0.0.0.0"
ENV PORT="8000"
# Server secret used for encryption
# generate using openssl rand -hex 32
ENV SERVER_SECRET=""
# Postgresql connection string
ENV POSTGRES_URL=""
# MongoDB connection string
ENV MONGODB_URL=""
# MongoDB database name
ENV MONGODB_DATABASE=""
# Redis connection string
ENV REDIS_URL=""
# idp credentials, passed to the authentication api
ENV IDP_USERNAME=""
ENV IDP_PASSWORD=""
# Rabbitmq management credentials
ENV RABBITMQ_MANAGEMENT_HOST=""
ENV RABBITMQ_MANAGEMENT_USER=""
ENV RABBITMQ_MANAGEMENT_PASS=""
ENV RABBITMQ_MANAGEMENT_PORT=""
# Rabbitmq amqp connection url
ENV RABBITMQ_URL=""
# Optional
# Only used to override the default values
ENV DEFAULT_CORS_ORIGINS=""
# Optional
# Only used for explicit override
ENV RABBITMQ_MANAGEMENT_URL=""

EXPOSE 8000

WORKDIR /www

RUN adduser -D -H appuser

RUN chown -R appuser:appuser /www/api/auth/utils/pki && chmod -R 750 /www/api/auth/utils/pki

USER appuser

CMD ["python3", "main_api.py"]

# CMD ["unitd-debug","--no-daemon","--control","unix:/var/run/control.unit.sock"]